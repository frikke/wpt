<svg xmlns="http://www.w3.org/2000/svg" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200" class="reftest-wait" viewBox="0 0 4 4"><metadata><title>removing href from an SVG image that has an xlink:href</title><h:link href="reference/green-rect-100x100.svg" rel="match"/></metadata><script href="/common/reftest-wait.js"/><script href="/common/rendering-utils.js"/><image width="2" href="data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' width='50' height='50' &gt;&lt;rect width='50' height='50' fill='red'/&gt;&lt;/svg&gt;" onload="test()" xlink:href="data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' width='50' height='50' &gt;&lt;rect width='50' height='50' fill='green'/&gt;&lt;/svg&gt;"/><script>// Our &apos;image&apos; elem fires its load event twice: first for its &apos;href&apos; // data-URI, and then again for its &apos;xlink:href&apos; data-URI (after // our dynamic attribute-removal makes it switch to load that one). // But we only want test() to run for the first load, so we use // &apos;didStartTest&apos; to nerf any invocations after the first. let didStartTest = false; async function test() { if (didStartTest) { return; } didStartTest = true; await waitForAtLeastOneFrame(); document.querySelector(&apos;image&apos;).removeAttribute(&apos;href&apos;); await waitForAtLeastOneFrame(); takeScreenshot(); }</script></svg>